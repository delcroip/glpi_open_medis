From e01ac1206470fc2556f63d361b0e513779b3ccfe Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?C=C3=A9dric=20Anne?= <cedric.anne@gmail.com>
Date: Mon, 16 Nov 2020 10:35:10 +0100
Subject: [PATCH 1/3] Handle definition of xxx_types config handled by a plugin

---
 inc/item_devices.class.php | 11 +++++++++--
 inc/plugin.class.php       | 27 ++++++++++++++++++++++++++-
 2 files changed, 35 insertions(+), 3 deletions(-)

diff --git a/inc/item_devices.class.php b/inc/item_devices.class.php
index 1e7f50f94b3..c11fea4139e 100644
--- a/inc/item_devices.class.php
+++ b/inc/item_devices.class.php
@@ -231,8 +231,15 @@ public static function rawSearchOptionsToAdd($itemtype) {
       ];
 
       foreach ($device_types as $device_type) {
-         if (isset($CFG_GLPI['item' . strtolower($device_type) . '_types'])) {
-            $itemtypes = $CFG_GLPI['item' . strtolower($device_type) . '_types'];
+         $cfg_key = 'item' . strtolower($device_type) . '_types';
+         if ($plug = isPluginItemType($device_type)) {
+            // For plugins, 'item' prefix should be placed between plugin name and class name.
+            // Nota: 'self::itemAffinity()' and 'self::getConcernedItems()' also expect this order in config key.
+            $cfg_key = strtolower('plugin' . $plug['plugin'] . 'item' . $plug['class']) . '_types';
+         }
+
+         if (isset($CFG_GLPI[$cfg_key])) {
+            $itemtypes = $CFG_GLPI[$cfg_key];
             if ($itemtypes == '*' || in_array($itemtype, $itemtypes)) {
                if (method_exists($device_type, 'rawSearchOptionsToAdd')) {
                   $options = array_merge(
diff --git a/inc/plugin.class.php b/inc/plugin.class.php
index 532dd5b435e..c1c258f85bc 100644
--- a/inc/plugin.class.php
+++ b/inc/plugin.class.php
@@ -1288,7 +1288,7 @@ static function registerClass($itemtype, $attrib = []) {
          if (class_exists($itemtype::getItem_DeviceType())) {
             $CFG_GLPI['device_types'][] = $itemtype;
          }
-         unset($attrib[$att]);
+         unset($attrib['device_types']);
       }
 
       if (isset($attrib['addtabon'])) {
@@ -1298,11 +1298,36 @@ static function registerClass($itemtype, $attrib = []) {
          foreach ($attrib['addtabon'] as $form) {
             CommonGLPI::registerStandardTab($form, $itemtype);
          }
+         unset($attrib['addtabon']);
       }
 
       //Manage entity forward from a source itemtype to this itemtype
       if (isset($attrib['forwardentityfrom'])) {
          CommonDBTM::addForwardEntity($attrib['forwardentityfrom'], $itemtype);
+         unset($attrib['forwardentityfrom']);
+      }
+
+      // Handle plugins specific configurations
+      foreach ($attrib as $key => $value) {
+         if (preg_match('/^plugin[az]+_types$/', $key) && $value) {
+            if (!array_key_exists($key, $CFG_GLPI)) {
+               $CFG_GLPI[$key] = [];
+            }
+            $CFG_GLPI[$key] = $itemtype;
+            unset($attrib[$key]);
+         }
+      }
+
+      // Warn for unmanaged keys
+      if (!empty($attrib)) {
+         trigger_error(
+            sprintf(
+               'Unknown attributes "%s" used in "%s" class registration',
+               $itemtype,
+               implode('", "', array_keys($attrib))
+            ),
+            E_USER_WARNING
+         );
       }
 
       return true;

From 35d7b59b9c4efd71b229fc5706b3b2f109a02c4c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?C=C3=A9dric=20Anne?= <cedric.anne@gmail.com>
Date: Mon, 16 Nov 2020 10:59:41 +0100
Subject: [PATCH 2/3] Fix regex and warning message

---
 inc/plugin.class.php | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/inc/plugin.class.php b/inc/plugin.class.php
index c1c258f85bc..123e37c8f73 100644
--- a/inc/plugin.class.php
+++ b/inc/plugin.class.php
@@ -1309,7 +1309,7 @@ static function registerClass($itemtype, $attrib = []) {
 
       // Handle plugins specific configurations
       foreach ($attrib as $key => $value) {
-         if (preg_match('/^plugin[az]+_types$/', $key) && $value) {
+         if (preg_match('/^plugin[a-z]+_types$/', $key) && $value) {
             if (!array_key_exists($key, $CFG_GLPI)) {
                $CFG_GLPI[$key] = [];
             }
@@ -1323,8 +1323,8 @@ static function registerClass($itemtype, $attrib = []) {
          trigger_error(
             sprintf(
                'Unknown attributes "%s" used in "%s" class registration',
-               $itemtype,
-               implode('", "', array_keys($attrib))
+               implode('", "', array_keys($attrib)),
+               $itemtype
             ),
             E_USER_WARNING
          );

From 2b5aa321b81a439cd9baa486832e49a6eeafd9d0 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?C=C3=A9dric=20Anne?= <cedric.anne@gmail.com>
Date: Mon, 16 Nov 2020 11:04:28 +0100
Subject: [PATCH 3/3] Fix assign and unset on !$value

---
 inc/plugin.class.php | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/inc/plugin.class.php b/inc/plugin.class.php
index 123e37c8f73..2f1ce9246ce 100644
--- a/inc/plugin.class.php
+++ b/inc/plugin.class.php
@@ -1309,11 +1309,13 @@ static function registerClass($itemtype, $attrib = []) {
 
       // Handle plugins specific configurations
       foreach ($attrib as $key => $value) {
-         if (preg_match('/^plugin[a-z]+_types$/', $key) && $value) {
-            if (!array_key_exists($key, $CFG_GLPI)) {
-               $CFG_GLPI[$key] = [];
+         if (preg_match('/^plugin[a-z]+_types$/', $key)) {
+            if ($value) {
+               if (!array_key_exists($key, $CFG_GLPI)) {
+                  $CFG_GLPI[$key] = [];
+               }
+               $CFG_GLPI[$key][] = $itemtype;
             }
-            $CFG_GLPI[$key] = $itemtype;
             unset($attrib[$key]);
          }
       }
